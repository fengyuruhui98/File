//rc_base.c

#ifndef _RC_BASE_C_
#define _RC_BASE_C_
//start of file


//变量定义
UBYTE gRc500Key[6];
UBYTE gThisCardSnr[13];
UBYTE gNhhFlag=0;


/*=============================================================================================
函数：rc522_write_byte
功能：
===============================================================================================*/
void rc_write_byte(UBYTE addr,UBYTE inbyte)
{
addr = ((addr&0x3f)<<1)&0x7f;	
rc_cs_clr();
spi_send_byte(addr);
spi_send_byte(inbyte);
rc_cs_set();
return;
}

/*=============================================================================================
函数：rc522_read_byte
功能：
===============================================================================================*/
UBYTE rc_read_byte(UBYTE addr)
{
UBYTE ch;	
//
rc_cs_clr();
spi_send_byte((addr<<1)|0x80);
ch = spi_rece_byte();
rc_cs_set();
//
return ch;
}



/*=============================================================================================
函数：rc_write_bytes
功能：
===============================================================================================*/
void rc_write_bytes(UBYTE addr,UBYTE *inbuf,UBYTE inbytes)
{
UBYTE i;
	
for(i=0;i<inbytes;i++){
   rc_write_byte(addr,inbuf[i]);
   }

return;
}	

/*=============================================================================================
函数：rc_read_bytes
功能：
===============================================================================================*/
void rc_read_bytes(UBYTE addr,UBYTE *outbuf,UBYTE outbytes)
{
UBYTE i;	
//
for(i=0;i<outbytes;i++){
	outbuf[i] = rc_read_byte(addr);
	}
//
return;
}


/*=============================================================================================
函数：rc_set_time_out
功能：设置超时
入口参数:
cnt_150us: 以150us为单位的数值
===============================================================================================*/
void rc_set_time_out(UWORD cnt_150us)
{
//
rc_write_byte(REG_RC500_TIMER_CLOCK,0x0b);	  //2048/13.56M = 151us
rc_write_byte(REG_RC500_TIMER_RELOAD,cnt_150us);
//
return;
}


/*=============================================================================================
函数：rc_clr_bits
功能：
===============================================================================================*/
void  rc_clr_bits(UBYTE addr,UBYTE mask)
{
UBYTE tch;
//
tch = rc_read_byte(addr);
rc_write_byte(addr,tch&(UBYTE)(~mask));
//
return;	
}	

/*=============================================================================================
函数：rc_set_bits
功能：
===============================================================================================*/
void  rc_set_bits(UBYTE addr,UBYTE mask)
{
UBYTE tch;
//
tch = rc_read_byte(addr);
rc_write_byte(addr,tch|mask);
//
return;		
}	




//end of file
#endif

